/*
 * Copyright 2017 NUROX Ltd.
 *
 * Licensed under the NUROX Ltd Software License (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.looseboxes.com/legal/licenses/software.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.doctracker.basic.ui;

import java.awt.Dimension;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import com.doctracker.basic.DtbApp;
import com.doctracker.basic.ui.actions.DtbActionCommands;

/**
 *
 * @author Josh
 */
public class SelectAppointmentOrCreateNewPanel extends javax.swing.JPanel {

    /**
     * Creates new form CofirmAppointmentOrCreateNew
     */
    public SelectAppointmentOrCreateNewPanel() {
        this(null);
    }

    public SelectAppointmentOrCreateNewPanel(DtbApp app) {
        initComponents();
        if(app != null) {
            DefaultListModel listModel = new DefaultListModel();
            for(String val : app.getAppointmentValuesForComboBox()) {
                listModel.addElement(val);
            }
            this.appointmentsList.setModel(listModel);
            Dimension dim = new Dimension(155, 120);
            this.appointmentsList.setPreferredSize(dim);
            this.appointmentsScrollPane.setPreferredSize(dim);
            this.addAppointmentButton.setActionCommand(DtbActionCommands.DISPLAY_APPOINTMENT_UI);
            app.getUIContext().addActionListeners(
                    SelectAppointmentOrCreateNewPanel.this, this.addAppointmentButton);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainLabel = new javax.swing.JLabel();
        appointmentsLabel = new javax.swing.JLabel();
        createNewAppointmentLabel = new javax.swing.JLabel();
        addAppointmentButton = new javax.swing.JButton();
        doneButton = new javax.swing.JButton();
        appointmentsScrollPane = new javax.swing.JScrollPane();
        appointmentsList = new javax.swing.JList<>();
        tableScrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        mainLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        mainLabel.setText("Select appointment below which matches the selected row ");

        appointmentsLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        appointmentsLabel.setText("Appointments");

        createNewAppointmentLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        createNewAppointmentLabel.setText("Or create new appointment here");

        addAppointmentButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addAppointmentButton.setText("Add Appointment");

        doneButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        doneButton.setText("Done");

        appointmentsList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        appointmentsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        appointmentsList.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        appointmentsScrollPane.setViewportView(appointmentsList);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableScrollPane.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(appointmentsScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(mainLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(doneButton, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(appointmentsLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(createNewAppointmentLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addAppointmentButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(tableScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(appointmentsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(appointmentsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createNewAppointmentLabel)
                    .addComponent(addAppointmentButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doneButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAppointmentButton;
    private javax.swing.JLabel appointmentsLabel;
    private javax.swing.JList<String> appointmentsList;
    private javax.swing.JScrollPane appointmentsScrollPane;
    private javax.swing.JLabel createNewAppointmentLabel;
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel mainLabel;
    private javax.swing.JTable table;
    private javax.swing.JScrollPane tableScrollPane;
    // End of variables declaration//GEN-END:variables

    public JLabel getAppointmentsLabel() {
        return appointmentsLabel;
    }

    public JLabel getCreateNewAppointmentLabel() {
        return createNewAppointmentLabel;
    }

    public JLabel getMainLabel() {
        return mainLabel;
    }

    public JButton getAddAppointmentButton() {
        return addAppointmentButton;
    }

    public JButton getDoneButton() {
        return doneButton;
    }

    public JList<String> getAppointmentsList() {
        return appointmentsList;
    }

    public JScrollPane getAppointmentsScrollPane() {
        return appointmentsScrollPane;
    }

    public JTable getTable() {
        return table;
    }

    public JScrollPane getTableScrollPane() {
        return tableScrollPane;
    }
}
